:root {
  --primary: #67729d;
  --secondary: #fed9ed;
}

body {
  color: var(--primary);
  font-family: Consolas, Monaco, "Andale Mono", "Ubuntu Mono", monospace;
  margin: 0;
}

h1,
h2,
p {
  margin: 8px 0;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.max-width {
  margin: 0 auto;
  max-width: 1600px;
}

.header {
  background-color: var(--primary);
  color: var(--secondary);
  padding: 32px 16px;
}

.example {
  margin: 32px 16px;
}

.graph {
  --vw: 100vw;
  --width: 1600px;
  --height: 200px;
  --x: 0;
  --y: 0;
  --limited-range: min(max(40px,calc(-20px + 15vw)),160px);
  --extrapolation: calc(200px + -12.5vw);
  --complex-pattern: max(min(min(max(min(160px,calc(4800040.000004366px + -1200000.0000010915vw)),calc(-80px + 30vw)),160px),calc(14400040.000013096px + -1200000.0000010915vw)),40px);
  background: #fffafd;
  border: 1px solid var(--primary);
  border-radius: 8px;
  max-width: var(--width);
  overflow: hidden;
  position: relative;
}
.graph::before, .graph::after {
  align-items: flex-end;
  background: var(--primary);
  bottom: 0;
  content: "";
  display: flex;
  height: 1px;
  left: 0;
  position: absolute;
  text-indent: 8px;
  white-space: nowrap;
  width: 1px;
  z-index: 1;
}
.graph::before {
  content: attr(data-label-y);
  transform: translateY(calc(var(--y) * -1));
  width: 100%;
}
.graph::after {
  content: attr(data-label-x);
  height: 100%;
  transform: translateX(var(--x));
}
.graph svg {
  display: block;
  fill: var(--secondary);
  height: var(--height);
  opacity: 0.5;
  stroke: var(--secondary);
  stroke-dasharray: 4;
  stroke-width: 0;
  width: 100%;
}
.graph--limited-range {
  --y: var(--limited-range);
}
.graph--extrapolation {
  --y: var(--extrapolation);
}
.graph--complex-pattern {
  --y: var(--complex-pattern);
}

/*# sourceMappingURL=index.css.map */
